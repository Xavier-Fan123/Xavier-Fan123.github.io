<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>比特币操作盈亏查看器</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
        }
        .input-group {
            margin-bottom: 10px;
        }
        label {
            display: inline-block;
            width: 120px;
        }
        input, select {
            width: 200px;
            padding: 5px;
        }
        button {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        #result {
            margin-top: 20px;
        }
        .chart {
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>比特币操作盈亏查看器</h1>
        <div class="input-group">
            <label for="openTime">开仓时间:</label>
            <input type="datetime-local" id="openTime" required>
        </div>
        <div class="input-group">
            <label for="openPrice">开仓价格 (USD):</label>
            <input type="number" id="openPrice" step="0.01" required>
        </div>
        <div class="input-group">
            <label for="direction">方向:</label>
            <select id="direction">
                <option value="long">做多</option>
                <option value="short">做空</option>
            </select>
        </div>
        <div class="input-group">
            <label for="leverage">杠杆:</label>
            <input type="number" id="leverage" min="1" step="0.1" value="1" required>
        </div>
        <div class="input-group">
            <label for="amount">BTC数量:</label>
            <input type="number" id="amount" step="0.0001" required>
        </div>
        <button onclick="trackPosition()">跟踪位置</button>
        <div id="result"></div>
        <div id="chart1m" class="chart"></div>
        <div id="chart10m" class="chart"></div>
        <div id="chart1h" class="chart"></div>
        <div id="chart1d" class="chart"></div>
    </div>

    <script>
        const API_KEY = 'cKlA3lVOMxMjg4hJsC0cn1YAIUu1Hk8P'; // 请替换为您的 API 密钥

        async function trackPosition() {
            const openTime = document.getElementById('openTime').value;
            const openPrice = parseFloat(document.getElementById('openPrice').value);
            const direction = document.getElementById('direction').value;
            const leverage = parseFloat(document.getElementById('leverage').value);
            const amount = parseFloat(document.getElementById('amount').value);

            try {
                const response = await axios.get(`https://financialmodelingprep.com/api/v3/historical-price-full/BTCUSD?apikey=${API_KEY}`);
                const data = response.data.historical;

                const openDateTime = new Date(openTime);
                const filteredData = data.filter(item => new Date(item.date) >= openDateTime).reverse();

                if (filteredData.length === 0) {
                    document.getElementById('result').innerHTML = "<p style='color: red;'>错误：没有找到该日期之后的数据</p>";
                    return;
                }

                const currentPrice = filteredData[0].close;
                const pnl = direction === 'long' ? 
                    (currentPrice - openPrice) * amount * leverage :
                    (openPrice - currentPrice) * amount * leverage;

                document.getElementById('result').innerHTML = `
                    <h2>结果</h2>
                    <p>开仓价格: $${openPrice}</p>
                    <p>当前价格: $${currentPrice}</p>
                    <p>盈亏: $${pnl.toFixed(2)}</p>
                `;

                createChart(filteredData, '1m', 'chart1m');
                createChart(filteredData, '10m', 'chart10m');
                createChart(filteredData, '1h', 'chart1h');
                createChart(filteredData, '1d', 'chart1d');
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('result').innerHTML = "<p style='color: red;'>发生错误，请稍后再试</p>";
            }
        }

        function createChart(data, timeframe, elementId) {
            const intervalMap = {
                '1m': 1,
                '10m': 10,
                '1h': 60,
                '1d': 1440
            };

            const interval = intervalMap[timeframe];
            const chartData = data.filter((_, index) => index % interval === 0);

            const trace = {
                x: chartData.map(item => item.date),
                close: chartData.map(item => item.close),
                high: chartData.map(item => item.high),
                low: chartData.map(item => item.low),
                open: chartData.map(item => item.open),
                type: 'candlestick',
                xaxis: 'x',
                yaxis: 'y'
            };

            const layout = {
                title: `BTC/USD ${timeframe} 价格走势图`,
                dragmode: 'zoom',
                showlegend: false,
                xaxis: {
                    rangeslider: {visible: false},
                    title: 'Date'
                },
                yaxis: {
                    title: 'Price (USD)'
                }
            };

            Plotly.newPlot(elementId, [trace], layout);
        }
    </script>
</body>
</html>